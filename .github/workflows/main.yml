name: 'Deploy'

# **What it does**: Builds backend application and deploys it to our VPS
# **Why we have it**: To automate CI/CD pipeline of our test environment

on:
  workflow_dispatch:
  push:
    branches:
      - main
      
permissions:
  contents: read
  
env:
  APP_NAME: investing-backend-rs

jobs:
  deploy:
    name: Build and deploy Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Add TLS Certificate
        run: |
          mkdir -p certs
          echo "${{ secrets.TLS_CERTIFICATE }}" > ./certs/tls.crt
          echo "${{ secrets.TLS_KEY }}" > ./certs/tls.key
      - name: Decrypt configuration
        run: ./decrypt-config.sh prod
        env:
          CONFIGURATION_PASSWORD: ${{ secrets.CONFIGURATION_PASSWORD }}
      - name: Build image
        run: docker build -t $APP_NAME .
      - name: Save image
        run: docker save -o $APP_NAME.tar "${APP_NAME}:latest" # TODO: tag
      - name: Set up SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Upload image to server
        run: rsync -avz $APP_NAME.tar docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/backend/
      - name: Start the backend
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -o SendEnv=DATABASE_PASSWORD <<EOF
              cd ~/backend
              docker-compose --profile deployed down
              docker load -i $APP_NAME.tar
              docker-compose --profile deployed up -d --no-color
          EOF
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
